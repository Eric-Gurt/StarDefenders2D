"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("./helpers");
var constants_1 = require("./constants");
var SendMessage = function (dataChannel, maxMessageSize, eventName, data) {
    var _a;
    if (data === void 0) { data = null; }
    var send = function (data) {
        var _a;
        var bytes = (_a = data.byteLength) !== null && _a !== void 0 ? _a : data.length * 2; // (times 2 for characters that uses 2 bytes per char)
        if (typeof maxMessageSize === 'number' && bytes > maxMessageSize) {
            throw new Error("maxMessageSize of " + maxMessageSize + " exceeded");
        }
        else {
            Promise.resolve().then(function () {
                dataChannel.send(data);
            });
        }
    };
    if (dataChannel.readyState === 'open') {
        try {
            if (eventName === constants_1.EVENTS.RAW_MESSAGE && data !== null && helpers_1.isRawMessage(data)) {
                send(data);
            }
            else {
                send(JSON.stringify((_a = {}, _a[eventName] = data, _a)));
            }
        }
        catch (error) {
            console.error('Error in sendMessage.ts: ', error.message);
            return error;
        }
    }
};
exports.default = SendMessage;
//# sourceMappingURL=sendMessage.js.map